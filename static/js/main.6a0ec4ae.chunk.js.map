{"version":3,"sources":["components/Header.js","components/Resume.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","roleDescription","socialLinks","map","item","url","target","Component","Resume","education","src","ImageUrl","alt","UniversityName","specialization","MonthOfPassing","YearOfPassing","CGPA","Societies","work","CompanyName","joiningDate","leavingDate","Achievements","achivement","skills","portfolio","imageUrl","link","description","ContactUs","linkedinId","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a0ec4ae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <React.Fragment>\r\n      \r\n      <header id=\"home\">\r\n         <nav id=\"nav-wrap\">\r\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\r\n            <ul id=\"nav\" className=\"nav\">\r\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\r\n            </ul>\r\n         </nav>\r\n\r\n         <div className=\"row banner\">\r\n            <div className=\"banner-text\">\r\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\r\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>{resumeData.roleDescription}\r\n               </h3>\r\n               <hr/>\r\n               <ul className=\"social\">\r\n                  {\r\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\r\n                      return(\r\n                              <li key={item.name}>\r\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\r\n                              </li>\r\n                            )\r\n                          }\r\n                    )\r\n                  }\r\n               </ul>\r\n            </div>\r\n         </div>\r\n\r\n         <p className=\"scrolldown\">\r\n            <a className=\"smoothscroll\" href=\"#resume\"><i className=\"icon-down-circle\"></i></a>\r\n         </p>\r\n\r\n      </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default  class Resume extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"resume\">\r\n\r\n         <div className=\"row education\">\r\n\r\n            <div className=\"twelve columns  text-center\">\r\n               <h1><span>Education</span></h1>\r\n            </div>\r\n            {\r\n              resumeData.education && resumeData.education.map((item)=>{\r\n                return(\r\n                  <React.Fragment key={item}>\r\n                    <div className=\"three columns\">\r\n                      <img src={item.ImageUrl} alt=\"LNMIIT logo\"/>\r\n                    </div>\r\n                    <div className=\"nine columns main-col\">\r\n                        <div className=\"row item\">\r\n                          <div className=\"twelve columns\">\r\n                              <h3>{item.UniversityName}</h3>\r\n                              <p className=\"info\">\r\n                                <h5>{item.specialization}  <em className=\"date\">({item.MonthOfPassing} {item.YearOfPassing})</em></h5>\r\n                              </p>\r\n                              <span>\r\n                              CGPA: {item.CGPA}<br />\r\n                              Societies : {item.Societies}\r\n                              </span>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                  </React.Fragment>\r\n                ) \r\n              })\r\n            }\r\n          </div>\r\n          \r\n          <div className=\"row work\">\r\n            <div className=\"twelve columns  text-center\">\r\n               <h1><span>Work Experience</span></h1>\r\n            </div>\r\n            {\r\n              resumeData.work && resumeData.work.map((item)=>{\r\n                return(\r\n                  <React.Fragment key={item}>\r\n                    \r\n                      <div className=\"three columns givePadding\">\r\n                        <img src={item.ImageUrl} alt=\"Company logo\" className=\"companyImage\"/>\r\n                      </div>\r\n                      <div className=\"nine columns main-col givePadding\">\r\n                          <div className=\"row item\">\r\n                            <div className=\"twelve columns\">\r\n                                <h3>{item.CompanyName}</h3>\r\n                                <p className=\"info\">\r\n                                  <h5>{item.specialization}  <em className=\"date\">({item.joiningDate} - {item.leavingDate})</em></h5>\r\n                                </p>\r\n                                <span>\r\n                                  <ul className=\"job-achievements\">\r\n                                  {\r\n                                    item.Achievements.map((achivement)=>{\r\n                                      return (\r\n                                        <li>{achivement}</li>\r\n                                      );\r\n                                    })\r\n                                  }\r\n                                  </ul>\r\n                                </span>\r\n                            </div>\r\n                          </div>\r\n                      </div>\r\n                    \r\n                  </React.Fragment>\r\n                )\r\n              })\r\n            }\r\n            \r\n          </div> \r\n          <div className=\"row skills\">\r\n            <div className=\"twelve columns  text-center\">\r\n               <h1><span>Skills</span></h1>\r\n            </div>\r\n            {\r\n              resumeData.skills && resumeData.skills.map((item)=>{\r\n                return(\r\n                  <React.Fragment key={item}>\r\n                    <div className=\"two columns\">\r\n                      <button>{item}</button>\r\n                    </div>\r\n                  </React.Fragment>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"twelve columns  text-center\">\r\n               <h1><span>Personal Projects</span></h1>\r\n            </div>\r\n            {\r\n              resumeData.portfolio && resumeData.portfolio.map((item)=>{\r\n                return(\r\n                  <React.Fragment key={item}>\r\n                    \r\n                      <div className=\"three columns givePadding\">\r\n                        <img src={item.imageUrl} alt=\"Project logo\" className=\"companyImage\"/>\r\n                      </div>\r\n                      <div className=\"nine columns main-col givePadding\">\r\n                          <div className=\"row item\">\r\n                            <div className=\"twelve columns\">\r\n                                <h3>{item.title} <a className=\"github-icon\" target=\"_blank\" href={item.link}> <i className=\"fa fa-github\"></i></a></h3> \r\n                                <span>\r\n                                  <ul className=\"job-achievements\">\r\n                                  {\r\n                                    item.description.map((description)=>{\r\n                                      return (\r\n                                        <li>{description}</li>\r\n                                      );\r\n                                    })\r\n                                  }\r\n                                  </ul>\r\n                                </span>\r\n                            </div>\r\n                          </div>\r\n                      </div>\r\n                    \r\n                  </React.Fragment>\r\n                )\r\n              })\r\n            }\r\n            \r\n          </div> \r\n          \r\n         \r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class ContactUs extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"contact\">\r\n          <div className=\"row section-head\">\r\n            <div className=\"ten columns\">\r\n              <p className=\"lead\">\r\n              Feel free to contact me for any work or suggestions below\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <aside className=\"eigth columns footer-widgets\">\r\n              <div className=\"widget\">\r\n                <h4>LinkedIn :&nbsp;\r\n                  <a href=\"https://www.linkedin.com/in/atharva-sharma/\">{resumeData.linkedinId}</a>\r\n                </h4>\r\n              </div>\r\n            </aside>\r\n          </div>\r\n        </section>\r\n        );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <footer>\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <ul className=\"social-links\">\r\n            {\r\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\r\n                return(\r\n                  <li>\r\n                    <a href={item.url}>\r\n                    <i className={item.className} />\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          \r\n        </div>\r\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\r\n      </div>\r\n    </footer>\r\n    );\r\n  }\r\n}","let resumeData = {\r\n    \"imagebaseurl\":\"\",\r\n    \"name\": \"Atharva Sharma\",\r\n    \"role\": \"Full Stack Developer\",\r\n    \"linkedinId\":\"https://www.linkedin.com/in/atharva-sharma/\",\r\n    \"skypeid\": \"Your skypeid\",\r\n    \"roleDescription\": \"A full stack developer who specialises in JavaScript Technologies across the MERN and MEAN stack. Experienced in building complete web applications with back-end API systems.\",\r\n    \"socialLinks\":[\r\n        {\r\n          \"name\":\"linkedin\",\r\n          \"url\":\"https://www.linkedin.com/in/atharva-sharma/\",\r\n          \"className\":\"fa fa-linkedin\"\r\n        },\r\n        {\r\n          \"name\":\"github\",\r\n          \"url\":\"http://github.com/atharvasharma\",\r\n          \"className\":\"fa fa-github\"\r\n        },\r\n      ],\r\n    \"aboutme\":\"\",\r\n    \"address\":\"India\",\r\n    \"website\":\"https://rbhatia46.github.io\",\r\n    \"education\":[\r\n      {\r\n        \"UniversityName\":\"The LNM Insitute of Information Technology\",\r\n        \"specialization\":\"Communication and Computer Engineering\",\r\n        \"MonthOfPassing\":\"June\",\r\n        \"YearOfPassing\":\"2021\",\r\n        \"CGPA\":\"8.17\",\r\n        \"Societies\" : \"Training & Placement Cell, Computer Society of India, Music Club\",\r\n        \"ImageUrl\" : \"/images/Logo-LNMIIT.svg\"\r\n      },\r\n    ],\r\n    \"work\":[\r\n      {\r\n        \"CompanyName\":\"Unicommerce\",\r\n        \"specialization\":\"UI Engineer\",\r\n        \"joiningDate\":\"Jun 2021\",\r\n        \"leavingDate\": \"Present\",\r\n        \"Achievements\":[\r\n          \" Constructing new building blocks for the application to incorporate modern UX in Angular. \",\r\n          \" Migrating entire Purchase Management Module from Choona.js (in-house framework) to Angular.\"\r\n        ],\r\n        \"ImageUrl\":\"/images/Unicommerce.png\",\r\n      },\r\n      {\r\n        \"CompanyName\":\"Unicommerce\",\r\n        \"specialization\":\"UI Intern\",\r\n        \"joiningDate\":\"Jan 2021\",\r\n        \"leavingDate\": \"May 2021\",\r\n        \"Achievements\":[\r\n          \"Migrated 5 crucial modules of the application from Choona.js (in-house framework) to Angular.\",\r\n          \"Worked on Internationalization support for the application, developed a PWA using Ionic.\",\r\n          \"Worked on Native JavaScript to understand and modify 7 years old JavaScript code\"\r\n        ],\r\n        \"ImageUrl\":\"/images/Unicommerce.png\",\r\n      },\r\n      {\r\n        \"CompanyName\":\"Outscal\",\r\n        \"specialization\":\"Software Engineering Intern\",\r\n        \"joiningDate\":\"May 2020\",\r\n        \"leavingDate\": \"June 2020\",\r\n        \"Achievements\":[\r\n          \"Worked on automating several processes in Google Classroom, to avoid manual work.\",\r\n          \"Developed a polling mechanism to deal with a bug in Google Forms.\"\r\n        ],\r\n        \"ImageUrl\":\"/images/outscal.png\",\r\n      }\r\n    ],\r\n    \"skillsDescription\":\"Your skills here\",\r\n    \"skills\":[\r\n      \"Angular\", \"React\", \"Node.js\", \"Express.js\", \"MongoDB\", \"Javascript\", \"Ionic\", \"Bootstrap\", \"CSS\", \"HTML\",\r\n      \"C++\", \"MySQL\"\r\n    ],\r\n    \"portfolio\":[\r\n      {\r\n        \"title\":\"Event Registration Application\",\r\n        \"description\":[\r\n          \"Full-stack application that handles user registrations and procures user data in MongoDB.\",\r\n          \"Used cookie-based authentication to provide authentication for admin users.\",\r\n          \"Used React, Semantic UI to build a responsive and minimal user interface.\"\r\n        ],\r\n        \"link\":\"https://github.com/atharvasharma/Registration-Management\",\r\n        \"imageUrl\": \"/images/project1.png\"\r\n      }\r\n    ]\r\n  }\r\n  \r\n  export default resumeData","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport Resume from './components/Resume';\r\nimport ContactUs from './components/ContactUs';\r\nimport Footer from './components/Footer';\r\nimport resumeData from './resumeData';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header resumeData={resumeData}/>\r\n        <Resume resumeData={resumeData}/>\r\n        <ContactUs resumeData={resumeData}/>\r\n        <Footer resumeData={resumeData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}